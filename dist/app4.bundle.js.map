{"version":3,"file":"app4.bundle.js","mappings":"MACA,IAWIA,EAEAC,EAiEIC,EA9EFC,EAAc,CAClB,YACE,6FACFC,SACE,0FACFC,YACE,qFACFC,OAAQ,0CACRC,SACE,wFAKJ,SAASC,EAASC,GAChB,IAAMC,EAAQ,IAAIC,IACdC,EAAQ,GAoBZ,MAAO,CACLC,IApBF,SAAaC,GAEX,OADAC,QAAQC,IAAI,iBAAkBN,GAC1BI,KAAeJ,IACjBE,EAAQA,EAAMK,QAAO,SAACC,GAAI,OAAKA,IAASJ,CAAW,KAC7CK,QAAQL,GACPJ,EAAMI,IAEN,IAEX,EAYEM,IAXF,SAAaN,EAAaO,GAExB,GADAN,QAAQC,IAAI,iBAAkBN,GAC1BE,EAAMU,OAAS,GAAKb,EAAS,CAC/B,IAAMc,EAAMX,EAAMY,aACXd,EAAMa,EACf,CACAb,EAAMI,GAAeO,EACrBT,EAAMO,QAAQL,EAChB,EAKF,CAEA,SAASW,IACP,OAAIxB,IAGJA,EAAmB,IAAIO,EAJMkB,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAMlC,CA8BQxB,EAAY0B,SAASC,eAAe,cACtBD,SAASC,eAAe,gBAChCC,iBAAiB,UAAU,SAACC,GAAC,OAP3C,SAAiCA,GAAG,IAAAC,EAClChC,GAA2B,QAARgC,EAAAD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUE,QAAS,EACxC,CAKgDC,CAAwBJ,EAAE,IACxE7B,EAAU4B,iBAAiB,SAAS,SAACC,GAAC,OAZhCK,EAnBR,SAAyBtB,GACvB,IAAMN,EAAWiB,EAAe,GAC1BY,EAAe7B,EAASK,IAAIC,GAClC,IAAKuB,EAAc,CACjBtB,QAAQC,IAAI,yBACZ,IAAMsB,EAAyBnC,EAAYW,GAE3C,OADAN,EAASY,IAAIN,EAAawB,GACnBA,CACT,CAEA,OADAvB,QAAQC,IAAI,wBACLqB,CACT,CAQmBE,CAAgBvC,GANLwC,EAOPJ,OANAR,SAASC,eAAe,iBAChCY,UAAYD,GAG3B,IAL8BA,EAMtBJ,CAY2D,G","sources":["webpack://code-stoke-vanilajs/./index4.js"],"sourcesContent":["// LRU Cache dummy data source.\nconst SEARCH_DATA = {\n  \"john wick\":\n    \"John wick is a movie series, where a retired assassin seeks vengeance for his dog's death.\",\n  avengers:\n    \"Avengers is a movie series, where a group of superheroes fight against the evil forces.\",\n  harryPotter:\n    \"Harry Potter is a movie series, where a young wizard fights against the dark lord.\",\n  batman: \"Batman is a movie series,  where a rich\",\n  superman:\n    \"Superman is a movie series, where an alien superhero fights against the evil forces.\",\n};\nlet searchInputValue;\n// LRU Cache Contructor.\nlet lruCacheInstance;\nfunction lruCache(maxSize) {\n  const cache = new Map();\n  let order = [];\n  function get(searchInput) {\n    console.log(\"cache from get\", cache);\n    if (searchInput in cache) {\n      order = order.filter((item) => item !== searchInput);\n      order.unshift(searchInput);\n      return cache[searchInput];\n    } else {\n      return null;\n    }\n  }\n  function set(searchInput, searchData) {\n    console.log(\"cache from set\", cache);\n    if (order.length + 1 >= maxSize) {\n      const key = order.pop();\n      delete cache[key];\n    }\n    cache[searchInput] = searchData;\n    order.unshift(searchInput);\n  }\n  return {\n    get,\n    set,\n  };\n}\n// lruCache Instance creation utitlity\nfunction createLruCache(maxSize = 2) {\n  if (lruCacheInstance) {\n    return lruCacheInstance;\n  }\n  lruCacheInstance = new lruCache(maxSize);\n  return lruCacheInstance;\n}\n// LRU Cache Accessing function\nfunction fetchSearchData(searchInput) {\n  const lruCache = createLruCache(3);\n  const searchResult = lruCache.get(searchInput);\n  if (!searchResult) {\n    console.log(\"Server hit...........\");\n    const searchResultFromServer = SEARCH_DATA[searchInput];\n    lruCache.set(searchInput, searchResultFromServer);\n    return searchResultFromServer;\n  }\n  console.log(\"Cache hit...........\");\n  return searchResult;\n}\n// Add search results in the dom.\nfunction displaySearchResults(results) {\n  const displayBlock = document.getElementById(\"search-result\");\n  displayBlock.innerHTML = results;\n}\n// Submit handler callback function.\nfunction submitEeventHanlder(e) {\n  const response = fetchSearchData(searchInputValue);\n  displaySearchResults(response);\n}\n// Input field change handler.\nfunction inputChangeEventHandler(e) {\n  searchInputValue = e.target?.value || \"\";\n}\n// DOM Update utility function.\nfunction loadUtil() {\n  const submitBtn = document.getElementById(\"submit-btn\");\n  const searchInput = document.getElementById(\"search-input\");\n  searchInput.addEventListener(\"change\", (e) => inputChangeEventHandler(e));\n  submitBtn.addEventListener(\"click\", (e) => submitEeventHanlder(e));\n}\n// Call DOM update utility function.\nloadUtil();\n"],"names":["searchInputValue","lruCacheInstance","submitBtn","SEARCH_DATA","avengers","harryPotter","batman","superman","lruCache","maxSize","cache","Map","order","get","searchInput","console","log","filter","item","unshift","set","searchData","length","key","pop","createLruCache","arguments","undefined","document","getElementById","addEventListener","e","_e$target","target","value","inputChangeEventHandler","response","searchResult","searchResultFromServer","fetchSearchData","results","innerHTML"],"sourceRoot":""}