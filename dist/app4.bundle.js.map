{"version":3,"file":"app4.bundle.js","mappings":"MAAA,IAWIA,EAGAC,EAiEIC,EA/EFC,EAAc,CAClB,YACE,6FACFC,SACE,0FACFC,YACE,qFACFC,OAAQ,0CACRC,SACE,wFAMJ,SAASC,EAASC,GAqBhB,OApBAC,KAAKD,QAAUA,EACfC,KAAKC,MAAQ,IAAIC,IACjBF,KAAKG,MAAQ,GAkBN,CACLC,IAlBF,SAAaC,GACX,GAAIA,KAAeL,KAAKC,MAAO,CAC7B,IAAME,EAAQA,EAAMG,QAAO,SAACC,GAAI,OAAKA,IAASF,CAAW,IAEzD,OADAF,EAAMK,QAAQH,GACPL,KAAKC,MAAMI,EACpB,CACE,OAAO,IAEX,EAWEI,IAVF,SAAaJ,EAAaK,GACxB,GAAIV,KAAKG,MAAMQ,OAAS,GAAKX,KAAKD,QAAS,CACzC,IAAMa,EAAMZ,KAAKG,MAAMU,aAChBb,KAAKC,MAAMW,EACpB,CACAZ,KAAKC,MAAMI,GAAeK,EAC1BV,KAAKG,MAAMK,QAAQH,EACrB,EAKF,CAEA,SAASS,IACP,OAAIvB,IAGJA,EAAmB,IAAIO,EAJMiB,UAAAJ,OAAA,QAAAK,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAMlC,CA+BQvB,EAAYyB,SAASC,eAAe,cAEtBD,SAASC,eAAe,gBAEhCC,iBAAiB,YAAY,SAACC,GAAC,OAV7C,SAAiCA,GAAG,IAAAC,EAClC/B,GAA2B,QAAR+B,EAAAD,EAAEE,cAAM,IAAAD,OAAA,EAARA,EAAUE,QAAS,EACxC,CAQkDC,CAAwBJ,EAAE,IAE1E5B,EAAU2B,iBAAiB,SAAS,SAACC,GAAC,OAhBhCK,EAnBR,SAAyBpB,GACvB,IAAMP,EAAWgB,EAAe,GAC1BY,EAAe5B,EAASM,IAAIC,GAClC,IAAKqB,EAAc,CACjBC,QAAQC,IAAI,wBACZ,IAAMC,EAAyBpC,EAAYY,GAE3C,OADAP,EAASW,IAAIJ,EAAawB,GACnBA,CACT,CACA,OAAOH,CACT,CASmBI,CAAgBxC,GAPLyC,EAQPN,OAPAR,SAASC,eAAe,iBAChCc,UAAYD,GAG3B,IAL8BA,EAOtBN,CAgB2D,G","sources":["webpack://code-stoke-vanilajs/./index4.js"],"sourcesContent":["const SEARCH_DATA = {\n  \"john wick\":\n    \"John wick is a movie series, where a retired assassin seeks vengeance for his dog's death.\",\n  avengers:\n    \"Avengers is a movie series, where a group of superheroes fight against the evil forces.\",\n  harryPotter:\n    \"Harry Potter is a movie series, where a young wizard fights against the dark lord.\",\n  batman: \"Batman is a movie series,  where a rich\",\n  superman:\n    \"Superman is a movie series, where an alien superhero fights against the evil forces.\",\n};\nlet searchInputValue;\n// LRU Cache dummy data source.\n// LRU Cache Contructor.\nlet lruCacheInstance;\nfunction lruCache(maxSize) {\n  this.maxSize = maxSize;\n  this.cache = new Map();\n  this.order = [];\n  function get(searchInput) {\n    if (searchInput in this.cache) {\n      const order = order.filter((item) => item !== searchInput);\n      order.unshift(searchInput);\n      return this.cache[searchInput];\n    } else {\n      return null;\n    }\n  }\n  function set(searchInput, searchData) {\n    if (this.order.length + 1 >= this.maxSize) {\n      const key = this.order.pop();\n      delete this.cache[key];\n    }\n    this.cache[searchInput] = searchData;\n    this.order.unshift(searchInput);\n  }\n  return {\n    get,\n    set,\n  };\n}\n// lruCache Instance creation utitlity\nfunction createLruCache(maxSize = 5) {\n  if (lruCacheInstance) {\n    return lruCacheInstance;\n  }\n  lruCacheInstance = new lruCache(maxSize);\n  return lruCacheInstance;\n}\n// LRU Cache Accessing function\nfunction fetchSearchData(searchInput) {\n  const lruCache = createLruCache(3);\n  const searchResult = lruCache.get(searchInput);\n  if (!searchResult) {\n    console.log(\"Cache hit...........\");\n    const searchResultFromServer = SEARCH_DATA[searchInput];\n    lruCache.set(searchInput, searchResultFromServer);\n    return searchResultFromServer;\n  }\n  return searchResult;\n}\n// Add search results in the dom.\nfunction displaySearchResults(results) {\n  const displayBlock = document.getElementById(\"search-result\");\n  displayBlock.innerHTML = results;\n}\n// Submit handler callback function.\nfunction submitEeventHanlder(e) {\n  // Call the LRU Cache utility function with input received.\n  const response = fetchSearchData(searchInputValue);\n  displaySearchResults(response);\n}\n// Input field change handler.\nfunction inputChangeEventHandler(e) {\n  searchInputValue = e.target?.value || \"\";\n}\n// Dom access utility\nfunction loadUtil() {\n  // get btn element\n  const submitBtn = document.getElementById(\"submit-btn\");\n  // get input field element.\n  const searchInput = document.getElementById(\"search-input\");\n  // register onchange event handler.\n  searchInput.addEventListener(\"onchange\", (e) => inputChangeEventHandler(e));\n  // register button on click event handler.\n  submitBtn.addEventListener(\"click\", (e) => submitEeventHanlder(e));\n}\n// Call domaccessutility on load of this script\nloadUtil();\n"],"names":["searchInputValue","lruCacheInstance","submitBtn","SEARCH_DATA","avengers","harryPotter","batman","superman","lruCache","maxSize","this","cache","Map","order","get","searchInput","filter","item","unshift","set","searchData","length","key","pop","createLruCache","arguments","undefined","document","getElementById","addEventListener","e","_e$target","target","value","inputChangeEventHandler","response","searchResult","console","log","searchResultFromServer","fetchSearchData","results","innerHTML"],"sourceRoot":""}